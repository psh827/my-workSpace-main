09:13 1교시
web/internet
HTTP/HTML 
이런거 들어봤을텐데 그리고 뭐 
servlet/JSP다 
model / architecture
WAS
인터넷이 뭐냐 지금와서 할이야기느 ㄴ아닌거같고 여러분들은 born to internet인가
실질적으로 91,90년 초반이지만 보급된거는 94년?정도라고 봐야되요 94,95년에서의 기업들으 홈페이지가 많이 만들어질때여서
기업중심으로는 조금빨리 펴졌고 기ㅓㅇㅂ안에서도 인터넷이무엇인가 강의를 할때엿으니깐 
그 이후 출생자죠 

도대체 인터넷가지고 뭘할수잇냐 당시에는 굉자히 핫한 주제였어요
기자친구하고 했던이야기가 
HTTP프로토콜 하게되면 HTTP프로토콜은 ?
예전과다르게 제가보는 경향이 예전에는 시쳇말로 개나소나 다데리고왔어요 
지금은 그정도까진 아니잖아 좀 골라는내고 싶은데 여기서 말하는 이이야기를 꺼내면 자바를꺼내면 다 알아요
그 외적인것만 살짝 넘어가버리면 비전공자들은 깨갱해버려요 전공은 학교다닐대 이것저것 좀 들어서 공부하는 방법도 그런거같아요
제가 어떤강의를 하면 실제 자기쪽에 어떤 코드도 써야하고 뭐든 해야되고 다른이야기하게되면 한쪽귀로 흘러들러버리고 당장 코드짜는것만 해야된다고 생각하는사람이 이썽요
제가 강의때 강사들이 그러헥하면 라디오라고해요 책에있는거 뭐라고 하냐 그냥 그것이먹히는 이유는 수강생이 게을러서그래요 어떤 강사가 파워포인트만들ㅇ서ㅓ 계속 딴데도 쓰겟죠
시간도 있을거에요 하도많이해서 이렇게 계쏙 진행하게되어지면 첫번째는 그 강사는 공부할 필요가없어요 이런식의 방식은 뭐때문에 생겨나느냐하면 수강생이 게을러서그래요 어떤식이냐면
혼자공부할수있는데 안해서 그래요 강사는 혼자 했을거거든 자기가 정리해서 하는거잖아 여러분들은 혼자 할 수 있는데 게으르고 모른다고 생각하는거지. 새로운게 등장하게되면 강사라고
해서 아는게 아니에요 시행착오해서 알아내는거지 그 시간에 대한 댓가를 여기에 파는거지 첨에는 댓가를 받는거지만 그 이후에는 반복이잖ㅇ
마찬가지로 여러분들은 딱 거기에서 아무것도 모르는상태에서 하기때문에 가치를 얻는거죠 머가문제냐며 ㄴ아무것도모르는사람이아닐때 무너진다.
질문이나 다른걸로 뭔가 들어올거고 그게 자기가 준비한것에서 벗어나면 답변못하는거에요 점점점 많아지거든요 우리는 월~금이 한코스에요 기업에서 5일동안 빼는것도 힘들거든요
어떤식으로하느냐하면 첨에 아이스브레이킹안햇죠 그거부터 잘못된거죠 왜 여기왔는지 이야기 다해야되요 5일도 하는데 6개월하는데 궁금할거아니에요 여기 오기전까지 여러분들은
전혀 다른 거 하던 사라ㅏㅁ들이에요 그러다가 여기온거잖아요 우연인거죠

HTTP는 TCP/IP로 움직인다. TCP/IP에서는 기본적으로 포트가 필요하고 mysql은 3306이고 우리 어제는 8080이잖아요 그것도 뭐에요 웹에 접근할때 그런 포트를 접근한적이 별로없죠
기본은 80이라고 80은 생략이 가능해요 naver.com:80쓰면 들어가져요 TCP/IP기본은 뭐냐면 JDBC할때 커넥션쓰면 끊어야된다고 했죠 왜끊어야되냐면 연결이 되어지면 연결한
클라이언트를 위해서만 사용되면 여기서쓰면 32개의 커넥션이 필요하다 32개든 100개든 사람뿐아니라 소프트웨어일수도있는데 숫자가 딱정해지면 거기 맞춰서 시스템 만들면되죠
일종의 아키텍쳐를 구성하면되요 그런데 인터넷은 불특정시간에 언제든지 사람들이 몰릴수잇죠 이상황에서 커넥션 몇개 만들까요 이런건 넌센스죠
대학교 원서를 온라인으로 받는 회사였어요 얘네는 딱 한철 장사 엄청나게 많은 요청이오는거죠 그런데도 가끔 다운되고한다 
평소에는 그냥 가다가 그때 딱 되면 엄청나게 폭주하게되는거죠 골치아파죽겟대 지금은 아마 클라우드로쓰면 문제가 안될거에요 당시에는 클라우드가 없엇단말이지
어떤 사이트를 만들었는데 몇명이 들어올지몰라 커넥션관리를 ㅓㅇ떻게 할가 db만쓸껀아니니깐 그래서 TCP/IP위해 새로운 네트웤 layer를 만들어요 기반은 TCP/IP인데 이거만으로는
힘들겠다해서 만드는게 HTTP에요 HTTP는 기본적으로 TCP/IP위에서 하대 조금 다른거는 stateless프로토콜이다.
db에서 연결이 들어오면 프로그램에서 close를 해야되잖아 얘는 요청이 들어왔어 서버가 요청이들어오고 보내요 그러면 연결이 끊켜요 (자동으로) 그렇기 때문에 어떤일이 벌어질까
어떤사람이 첫번재 요청했을때랑 두번재연결했을때에 동일 사람이라도 서버는 이 요청이 동일사람으로 부터 온지 몰라요 
그래서 어떤일이 벌어진다하면 쇼핑몰에 들어가서 뭔가를 담고 할때 해당 쇼핑몰에서로긴해주세요 하는거에요 왜냐면 그때는 너를 인식해주겠어
그전까지는 몰라요 만약 중요한정보 메일을 넣는다 했을때 첫번재는 이사람이 메일에 접근할 수 ㅣㅇㅆ는 사람인지 인증된 회원인지가 첫번째고
메일이 여러개 있을테니가 이사람이 동일 사용자인것인가를 연결해주겟다 이거를 session이라고해요 가끔은 로그인하지않았는데도 ㅅ불구하고 구매한 목록이있고 있죠
사실 똑같은 건데 cookies를 이용해서 여러분들 pc에 보관해두는거에요. 연결이되어서 그런게 아니고 꼼수. 연결되어있는거처럼 보이는 꼼수
HTTP는 TCP/IP에대ㅐ 더 많은 사용자를 다룰 수 있다.
다만 TCP가 아니기때문에 애플리케이션기반의 뭔가를 해야ㅗ딘다 브라우저가지고 뭔가를 하긴하는데 브라우저를 마치 이클립스처럼 쓰고싶은거야 이클립스같은 어플리케이션이거지
이럴때는 이 프로토콜이 안좋아요 제약적이기때문에 왜그러냐면 HTTP는 HTML을 보여주기위해서 나왔잔용 HTML은 문서에요 정적문서. 
HTML은 기본적으로 코딩을 박잖아요 이름:무머뭐 그러면 누가적더라도 뭐무머 에요 근데 누가 들어오면 다른 사람일수있어 그러면 동적문서에ㅛㅇ
HTMl로 할수있냐면 없어요 동적문서로만들기위해서 script가 나온거에요. 이런것은 뭘 흉내내는거냐하면 정적문서를 애플리케이션화할려고하는거에요
애플리케이션화는 요청을 정적문서에서 동적으로 하겠다는거ㅔ용
구구단할꺼면 그냥 찍으면되지 왜 변수로 받아요
i,j를 동적으로 바꿔서 9단될수도있꼬 20단될수도잇다는거지 HTML은 불가능하다는거지
다시가서 이야기하면 최초의 프로토콜이 HTMLㅇ이라는것이 그렇게 설꼐되엇다 정적문서 HTML을 보여주기위해서 설꼐되었기때문에 굳이 할필요없었따.
그런데 점ㅈ머 HTML이용해서 사람들이 점점 애플리케이션화가는거에요 왜? 이 인터넷이라는 거대 네트웍을 단지 정적문서, 기업 홍보용으로쓰기에는 아까웠따.
그전에는 사설망을 깔았어요 그 비용이 어마어마했어요 그거를 깔빠에요 인터넷써서 전세계묶짜 빌게이츠 조차도 마소 라고 했을때 OA나 그런데 특화되었다고 생각되지만
인터넷이 강하다고 생각안들죠 빌게이츠가봤을때는 인터넷 쓰래기야 그래서 자기가 사이트만들어서 그안에서 자기 세계의 인터넷을 만들겠따 한거야
얼마나 유치한거냐고 마소 인터넷이랑 전세계 인터넷이랑 대결하겟다이거지 mbc랑 youtube의 싸움이지. youtube는 다양성이 존재하는거거든 마소는 그거를 놓친거지
인터넷은 그거보다 더 많은 세상을 우리한테 보여줬기 때문에 거기서 끝낫거에요. 

여기서 HTML프로토콜이 문제가 발생하는거죠 초기에는 장점이었다가 단점화 된거에요


10:08 2교시

HTTP
요청 : 누르는것 버튼을 누르는것
응답 : 누르고나면 결과가 나오는것

개발자의 언어로 바꾸면?

이 단어를 정제화 시켜서 가면 이 문제에 대한 정의를 해결하기위한 수단으로바꾸게되면 명확하게바뀐다.
요청했따 응답했다 하면 프로그램적으로는 해결방안이안나온다 스레드는 뭐냐 스레드는 프로세스하고 비교하기도하고 동시에 여러가지일을한다 이렇게 설명을 햇는데
그거보다 스레드가 실질적으로 자기의 독자적인 실행흐름을 가진다 하면 여러개를 가진다하면 멀티스레드라고 한다.
지금까지 다뤘다. 메인메서드가 스레드다. 메인메서드에서 적혀져있는 순서대로 실행되었다 이게 실행 스레드라고 한다.
메인에서 실행하느 ㄴ과정에서 특정에서 실행줄기가 분화된다. 스레드는 어떻게보면 메인의 여러가지다.
스레드라는 이 용도도 개발자의 ㅇ언어로 바꿔보면 더쉬워진다.

요청과 응담도 마찬자기 클라이언트에서 보내는거 요청이고 서버가 주는거 응답이다. 그안에서 움직이는거는 stream이다.
네트웤을타고 다 stream으로 움직인다.
stream을 타고 하드디스에 저장하기도 하고 서버가 가지고있는 자원들을 클라이언트들하네 밀어보내기도하고 서버가 가지고있는 것을 클라이언트한테 밀어보낼때 형식이 뭘까
그 형식이 HTML이에요 우리한테 HTML은 파일이잖아. 확장자로 저장하는 파일 실질적으로 stream이에요 네트웤을타고 브라우저까지 전달하는거죠
브라우저가 하는 열활은 무엇일까요 HTMl을 파싱하는거잖아요 글자잖아 그런데 우리는에는 실제 테이블이 보이는거잖아 나는 그냥 테이블이라고 쳣을뿐인데 화면에 테이블이 보이잖아
고급수준의 언어라고하거든요
두가지의 방법이있어요
자바같이 for문돌리고 로직돌리고 그런언어가있고
<HTML>, <xml> 이런언어가 있다.
언젠가는 언어는 갈 수록 쉬워진다고 봤을때 자바는 쉬운게 아니죠 <HTML>에 비교하면
<HTML>이런게 좀더 고급랭귀지
우리가 가장 쉽게할수있는것들은 현재까지의 방식에서 젤 쉬운거는 위짓?방식이에요 
파워포인트썻잖아요 테이블 죽눌러서 하면 테이블나오고 동그라미한개하겟다하면 아이콘누르면 나오죠 이런게 위짓방식이에요
보이는대로 나오는대로 바로바로 나오는것
지금은 어쨋든 처야된다.
다만 코드자동완성 이런걸 제공되는거지 지금은 다 component화 될거다.
자바도 기본 목적은 component다. 여기서는 servlet/JSP배운다 하지만 sun에서는 이름이 뭐냐면 developing web component using java technology.
우리의 목적은 web component만드는게 목적. 오래된 이야기에요.
component만든다는 이야기는 부품처럼쓰다는이야기 모든 모듈을 부품처럼쓴다는이야기.
여러분들 class배우잖아요 그거를 모아서 component가되는거에요 그거를 모여서 애플리케이션이 되는거에ㅛ
class는 재사용되기는 쉬우나 일종의 무게감이 떨어져요 질이 좀 안좋은 재사용이에요
component는 class보다는 낫죠.
완전한 재사용은 애플리케이션 그 자체를 재사용하는거에요.
그러면 우리는 계속 애플리케이션만들고 재사용하게되어지면 이미 전세계 수많은 애플리게이션이잇고 특정한 프로토콜에맞춰서 만들어질거고 그러면 재사용에대한 빌드업은 커지겟죠
대부분 사람들은 결과만 보고 접근하는데 

HTTP/
요청 메소드(GET,POST)
URL : 특정 문서,자원이있는 위치를 가르키는것
파라메터 : 회원가입한다 했을때 회원가입 페이지로가죠 데이터를 넣죠. 데이터를 통해가지고 파라메터로 서버로 넘기는거에요 파라메터로 넘길때 get쓸지 post쓸지 결정하는거에요.

피시에는 브라우저가있겠죠 서버로연결합니다 url로 연결합니다. get으로 할것인지post로할것이지 99%이거 쓴다.
연결할때 이거로 충분하다 하면 응답이 와요. 이거로 충분하지않을수도있다 예를들어 로그인페이지다 그러면 id, passwd해야겟죠 이게 파라메타입니다.
이렇게 서버와 클라이언트랑 정보를 주고받는겁니다.
응답이 오겟죠 
응답 코드(상태 코드)
성공할 경우에는 코드번호를 못본다. 왜냐면 성공화면을 보기때문에 (200)
404 
500 서버에 에러날때

컨텐츠 타입이 등장해요 전달하고하는것이 text야 HTML이야 응답타입은 text야 그것만있는게 아니고 음악이면 mp3면 오디오 관련된 타입이 전달될거고
유튜브면 영상이 전달되겟죠

컨텐츠 실질적으로 화면에 표시될때 응답코드가 전달되어지고
프로토콜이라는 개념이 약속이라는 건데 요런규격으로 보낼게 이런뜻이에요
응답코드가 가고 타입이 건너가고 안에 바디가 갑니다. 바디가 <HTML> 이렇게 갑니다 가서 브라우저에 찍히는거에요
이게 요청 응답 요청응답 이런 사이클로 간다는거에요. 이게 HTML 특징이다.

SERVLET/JSP는 
HTML은 브라우저에 있는게 아니에요 HTML은 서버에 있따. 
스크립트도 서버에 있는것. 
<HTML>
	<head>
		<script>
주루룩 읽으면서 어 스크립트달라하네? 그러면 다시 서버가서 요청하고 
img하면 다시 서버가서 요청하고 계쏙 왔다갔다하면서 가져가요 다 서버에 있는거지
클라이언트에는 아무것도없어요 받은 다음에 하는거지
대신에 차이가 있다고 하면 클라이언트에서 동작하는거 정도?

반대로 servlet/JSP는 뭐냐면 서버에서 있는것도 서버에있고 처리도 서버에서한다 결과만 보낸다.
처리결과를 보낼때 어떻게 보내냐 HTML로 바꿔서 보낸다. 브라우저가 이해하는게 HTML밖에없거든
그래서 얘내들을 server side page라고 해요. 


11:11 3교시
 
웹 사이트와 URL
홈페이지는 우리가 만들고자하는것을 일반사람들을 이해시키기위해 쓰는것
It does not matter.
IT does not matter.

	웹 사이트 : 정적 문서로 구성된 사이트
	URL 구성
		protocol  ://host:port/path/file
		http://www.season.com:80/spring/april.html
		http://www.season.com/spring/april.html
		http://www.season.com()
	파라메터
		주소 뒤에 추가로 붙는 데이터
		?를 사용해서 주소 경로와 구분
		http://www.season.com/spring/april.html?weather=sunny&temp=25
		
	HTTP 메소드(GET)
		요청 방식에 따라 크게 GET/POST 구분
		GET 요청 방식
			단순히 서버에게 자원(HTML, 이미지, 문서)등을 URL을 통해 요청하는 방식
			필요한 데이터를 URL 뒤에 덧붙여 전송.
			데이터 크기 제약이 있으며 북마킹을 허용(지원)
			브라우저 캐싱에 의한 보안 문제야기
			
			보안적, 보내야 될 데이터가 많다 그러면 POST 
		POST 요청 방식
			주로 폼에서 사용되는 방식으로 웹 컨텐츠의 내용을 변경하기 위해 사용
			필요한 데이터를 HTTP요청의 메서지 바디를 통해 전송
			데이터의 양이 많거나 URL에 노출되지 말아야할 때 사용
			
			get을 써야되는데 post를 쓰면 북마킹이안된다. 북마킹은 실제로 쳐야되는 부분은 좀 덜치게 만들어주는것 
			하이퍼링크는 쳐야될정보를 치지말고 눌러서 넘어가게하는게 하이퍼링크
			이 연장 선상에서 생각하면 신발하나는 살려고하면 가격에 맞는 검색엔진에다가 모델명을 적으면 각 쇼핑몰을 읽으면서 뿌려주죠
			적당한 가격을 보고 클릭해서 들어가는거잖아요 근데 post로 받았다면 검색이안되요 

웹 어플리케이션
	웹 사이트 + Dynamic working service(CGI Processing)
	CGI (Common Gateway Interface)
		-. 웹 서버에 존재하는 프로그램을 호출할 수 있는 기술
			프로그램이 원격체 어딘가에 있는거고 나는 얘를 콜하는거에요.
			그방식이 어떻게 콜할거냐에대한 표준화가 없었단 말이죠 그 표준화가 CGI에요
			그때부터 웹의 어플리케이션화가 진행되는거에요. 
			프로그램이 들어갓다는건 동적인작업을 하는거죠.
			
			옛날에 돈버는 기술이 Web Aplication Server (WAS)
			그때부터 지금우리가 보는 웹들이 만들어졌다.
		-. Perl, C 등 다양한 언어로 작성
		-. Process loading 방식
			이 process는 어떤 방식이냐면 작업관리자를 열면 여기있는게 다 프로세스들이에요.
			각각마다 메모리를 다 점령하고있어요 크롬이 메모리를 많이먹고있어요 하나의 페이지가 오류먹으면 그거만 죽이면되요.
			튼 이 process방식은 요청이 들어오고 프로그램이 그 요청을 처리하기위해서 process를 띄워요
			이방식은 속도나 이런방식은 괜찮지만 하드웨어적인 부담이 엄청나다 그래서 process는 하나만 띄우고 각각의 요청은 Thread로 처리해요
			이게 요새쓰는 방식 저 process loading은 옛날 방식
			브라우저도 하나하나 process하다가 탭방식으로 바꼇죠 
			
	ASP.NET, Servlet/JSP
	

14:15 5교시	
웹 컨테이너
	-. 웹 컴포넌트(Servlet/JSP 등) 실행 관리를 위한 프레임워크
		ex) 톰캣, 레진, Glassfish 등
	-. 서블릿과 웹서버간의 커뮤니케이션 지원
	-. 서블릿 라이프사이클 관리
	-. 요청에 대한 멀티 스레딩 지원
	-. 보안 및 오류에 대한 처리 지원



파일이 있고 자식의 파일이 있어 파일의 새끼의 디렉토리가 있어	
컴포넌트 재사용.
웹컨테이너가 있다라는거는 웹 컴포넌트가 있다.
우리가 배울 Servlet/JSP가 웹 컴포넌트.
Servlet/JSP가어디에서 돌아가냐 즉 버튼들이 윈도우 프레임에 있듯이 tomcat에서 돌아간다.
tomcat이 웹 컨테이너의 일종이다.



03:10 6교시
HelloServlet을 만들었어요 아버지가 HttpServlet이에요
이 HttpServlet에도 아버지가 있어요 GenericServlet
GenericServlet도 아버지가 있어요 Servlet
Servlet은 합성어거든요 Server + let 
서버새끼 조그만한 서버같은 녀석

Servlet => interface (객체를 만들 수 없다. 추상메소드를 만들 수 잇따)
이것을 implements한게 GenericServelt이다

HttpServlet의 doGet, doPost 다 있다.
오버라이딩해서 쓰며 된다.

		protected void doGet(HttpServletRequest request, HttpServletResponse response) 
				throws ServletException, IOException{
			String pageTitle = "Hello World";
			response.setContentType("text/html; charset=UTF-8");
			PrintWriter out = response.getWriter();
			out.println("<html>");
			out.println("<head><title>" + pageTitle + "</title></head>");
			out.println("<body>");
			out.println("<h3> Welcome to 서블릿 프로그래밍</h3>");
			out.println("</body></html>");
			out.close();
		}
		

04:15 7교시
화면에 표시하는것을 프레젠테이션로직이라고 한다. 
동적으로 바뀌는 것과 실제 화면에 보이는 로직들이 함께있다.
자바 서블렛에서 이래선안되겟다고생각해서 jsp는 servlet이다 jsp를만들면 servlet으로 변환되어진다.
톰캣깔때 catalina 엔진과 같이 돌아가면서 servlet으로 변환시켜준다.
내부적으로 동작하는거는 servlet이다 즉 자바로 보인다.
나중에 저 부분들을 삭 들어내서 JSP로보낸다.
JSP는 servlet은 전체가 자바로 HTML을 찍고있쬬
JSP는 전체가 HTML이고 그 안에서 java를 쓴다.
많은 개발자들이 servlet은 포기하고 다 JSP를 쓰게된다.
여기서부터 아키텍쳐고뭐고 만들기만하면된다 라는 식으로 가게된거에요
JSP가지고만 만든것을 model001이라고한다.

우리가 만든것도 자바이기때문에 new해서 객체만들어야된다.
웹 컨테이너가 만들어준다.
한개만든다 백명이붙어도 한개 천명이붙어도 한개.
단점은 하나를가지고 여러개처리하면 스태틱처럼 동시성문제 동시에 여러사람이들어왓을때 불안전한것
어떤데이터가 동시에들어오면 문제를 야기시키는가 여기보면 일반클래스지만 멤버변수가 없다 멤버변슈가없으면 여러사람이 값을 바꿀 수 잇죠,.
로컬베이러블은 동시성문제를 야기하지않는다. 백명, 천명이 들어와도. 
멤버변수를 읽기용도로는 사용할 수 있다. db할때 이야기안했지만 사실 온라인뱅킹할때 출금과 입금을 하잖아요 실제로는 출금과 입금을 했으면 그 전체의 내역을 보관해야됩니다. 
그래야 부인방지하죠. 로그를 다 남겨야된다는 말이죠. 입금을 하죠 출금한거는 데이터베이스에서 업데이트해야되잖아요 동시에 출금했다는 정보를 insert해야되요.
근데 insert를 실패해버렸어요. 그러면 문제를 일으키잖아요 그래서 출금과 기록을 함께 처리해야되는식으로 코드를 제어해야되요 이대 제어할때 어떻게 하나면
드라이버커넥션으로부터 커넥션을 얻죠 이때는 기본적으로 오토커넥이에요. 그런데 원래되로는 오토커넥을 false로 해야되요 그리고 try가 다 끝나고 문제가 없으면 커넥션.commit
catch가되면 커넥션.rollback 이거를 하려다가 왜 말았냐고 하면 이것도 뒤로가게되어지면 프레임웤에서 다해요. 
지금은 트래지션문제기때문에 개념적으로 설명하고 실질적으로는 컨테이너한테 맡긴다. 
이문제가 리스크가굉장히 크다. 지금은 두개밖에없지만 사실은 현실은 더복잡하다.
쇼핑몰에서 물건을 삿다. 어떤변화가있을까요. 구매정보의 테이블이들어가야된다. 재고정보가서 재고빼야된다. 배송정보한테가서 알려줘야된다. 

